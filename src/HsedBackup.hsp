#include "uedai_userdef/all.hsp"
#define global Str_AppName "HsedBackup"

#packopt name Str_AppName
#packopt hide true

#include "hsedsdk.as"
#include "util/dir_exists.hsp"
#include "util/path_flatten.hsp"
#include "util/MCIni.hsp"
#include "util/trayicon.hsp"
#include "util/MCTimer.hsp"

#define global success true
#define global failure false

#define Str_IniName (Str_AppName + ".ini")

#module

#uselib "user32.dll"
#func   PostMessage "PostMessageA" int,int,int,sptr

#deffunc RegularQuit
	PostMessage hwnd, 0x0010, 0, 0
	return
	
#defcfunc getpath_without_ext str _path,  local path, local ext
	path = _path
	ext = getpath(path, getpath_ext)
	poke path, strlen(path) - strlen(ext), 0
	return path
	
#defcfunc GetTmpFileName str path
	return strf("%s@%02d-%02d-%02d-%02d-%02d-%02d%s", getpath_without_ext(path), gettime_year \ 100, gettime_month, gettime_mday, gettime_hour, gettime_min, gettime_sec, getpath(path, getpath_ext))
	
#global

*main
	gosub *LInitialize
	stop
	
*LInitialize
	gosub *LInitSetting
	gosub *LInitTimer
	gosub *LInitIcon
	
	cntBakFile = 0
	sdim path, MAX_PATH
	return
	
*LInitSetting
	ini_new cfg, dir_exe2 + "/" + Str_IniName
	bakpath = ini_gets(cfg, "backup", "dir_bak", dir_exe2 + "/_bak")
	spnTime = ini_geti(cfg, "backup", "span", 60 * 1000)
	
	if ( dir_exists(bakpath) == false ) {
		mkdir bakpath
	}
	return
	
*LInitTimer
	timer_new timerBackup, , spnTime
	oncmd gosub *OnTimer, WM_TIMER@MCTimer
	return
	
*LInitIcon
	SetTrayIconFile ""
	CreateTrayIcon Str_AppName
	oncmd gosub *OnTrayIconEvent@, WM_TRAYEVENTSTART@trayicon
	return
	
*OnTimer
	gosub *LHsedExists
	gosub *LBackup
	return
	
*LBackup
	hsed_gettabcount cntTab
;	logmes strf( "(cntTab: %d) %s", cntTab, GetTmpFileName("") )
	repeat cntTab
		hsed_getfootyid idFooty, cnt
		
		hsed_getmodify bModify, idFooty
		if ( bModify == false ) { continue }
		
		hsed_getpath path, cnt
		if ( stat ) { continue }
		if ( path == "" ) { path = "_" + cnt }
		path = path_flatten(path)
		
		hsed_gettext text, idFooty
		bsave bakpath + "/" + GetTmpFileName(path), text, strlen(text)
		cntBakFile ++
	loop
	return
	
*LHsedExists
	hsed_exist
	if ( stat == false ) { end }
	return
	
*OnTrayIconEvent@
	// wparam = idIcon
	
	switch ( lparam )
		case 0x0201: //正クリック 押下
			gosub *LBackup
			timer_reset timerBackup
			swbreak
		case 0x0203: //正クリック W-Click
			RegularQuit
			swbreak	
		;case 0x0204: //逆クリック 押下
	swend
	return
