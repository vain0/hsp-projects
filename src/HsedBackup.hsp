// hsed 自動バックアップ

#include "uedai_userdef/all.hsp"
#define global Str_AppName "HsedBackup"

#packopt name Str_AppName
#packopt hide true

#include "hsedsdk.as"
#include "util/dir_exists.hsp"
#include "util/path_flatten.hsp"
#include "util/MCIni.hsp"
#include "util/trayicon.hsp"
#include "util/MCTimer.hsp"

#define global success true
#define global failure false

#define global WM_TIMER          0x0113		// タイマーの周期通知
#define global WM_TRAYEVENTSTART 0x0900		// トレイアイコン処理

#define Str_IniName (Str_AppName + ".ini")

#module

#uselib "user32.dll"
#func   PostMessage "PostMessageA" int,int,int,sptr

#deffunc RegularQuit
	PostMessage hwnd, 0x0010, 0, 0
	return
	
#defcfunc getpath_without_ext str _path,  local path, local ext
	path = _path
	ext = getpath(path, getpath_ext)
	poke path, strlen(path) - strlen(ext), 0
	return path
	
#defcfunc GetTmpFileName str path
	return strf("%s@%02d-%02d-%02d-%02d-%02d-%02d%s", getpath_without_ext(path), gettime_year \ 100, gettime_month, gettime_mday, gettime_hour, gettime_min, gettime_sec, getpath(path, getpath_ext))
	
#global

*main
	gosub *LInitialize
	stop
	
//------------------------------------------------
// 前処理
//------------------------------------------------
*LInitialize
;	gsel 0, -1
	gosub *LInitSetting
	gosub *LInitTimer
	gosub *LInitIcon
	
	cntBakFile = 0
	sdim path, MAX_PATH
	return
	
*LInitSetting
	ini_new cfg, dir_exe2 + "/" + Str_IniName
	bakpath = dir_exe2 + "/" + ini_gets(cfg, "bakfile", "dir_bak", "bak")
	spnTime = ini_geti(cfg, "backup", "span", 120)
	
	if ( dir_exists(bakpath) == false ) {
		mkdir bakpath
	}
	return
	
*LInitTimer
	timer_new timerBackup, , spnTime
	oncmd gosub *OnTimer, WM_TIMER
	return
	
*LInitIcon
	SetTrayIconFile ""
	CreateTrayIcon Str_AppName
	oncmd gosub *OnTrayIconEvent@, WM_TRAYEVENTSTART
	return
	
//------------------------------------------------
// タイマー処理
//------------------------------------------------
*OnTimer
	gosub *LCheckExist		// hsed がない => 終了
	if ( stat == failure ) { return }
	
	gosub *LBackup
	return
	
//------------------------------------------------
// バックアップの実行
//------------------------------------------------
*LBackup
	hsed_gettabcount cntTab
;	logmes strf( "(cntTab: %d) %s", cntTab, GetTmpFileName("") )
	repeat cntTab
		hsed_getfootyid idFooty, cnt
		
		hsed_getmodify bModify, idFooty
		if ( bModify == false ) { continue }		// 未変更ならバックアップしない
		
		hsed_gettext text, idFooty
		hsed_getpath path, cnt
		if ( stat == 0 ) {
			if ( path == "" ) { path = "_" + cnt }
			path = path_flatten(path)
			bsave bakpath + "/" + GetTmpFileName(path), text, strlen(text)
			cntBakFile ++
		}
	loop
	
	return
	
//------------------------------------------------
// 終了チェック
// 
// @ hsed が起動していない => 終了
//------------------------------------------------
*LCheckExist
	hsed_exist
	
	if ( stat == false ) {
		RegularQuit
		return failure
	}
	return success
	
//------------------------------------------------
// トレイアイコン処理
//------------------------------------------------
*OnTrayIconEvent@
;	idIcon = wparam
	switch ( lparam )
	;	case 0x0201:	// 正側ボタン 押下
	;	case 0x0204:	// 逆側ボタン 押下
	;		swbreak
		case 0x0203:	// 正側ボタン W-Click
			RegularQuit
			swbreak	
	swend
	return
	