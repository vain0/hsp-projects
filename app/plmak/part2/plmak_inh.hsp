// plmak - private header

#ifndef IG_PLMAK_PRIVATE_HEADER_HSP
#define IG_PLMAK_PRIVATE_HEADER_HSP

#define _plmak_DebugOut

#define success 0
#define failure -1

/*
#ifdef _DEBUG
 #define global ctype dbgpair(%1, %2) ( {"(%1,%2) = ("} + (%1) + ", " + (%2) + ")" )
#else
 #define global ctype dbgpair(%1, %2) ""
#endif
//*/

//------------------------------------------------
// Error on 字句解析
//------------------------------------------------
#enum LxErr_None = 0
#enum LxErr_UnknownChar		// 謎の文字
#enum LxErr_Max

//------------------------------------------------
// Error on 符号化
//------------------------------------------------
#enum EncErr_None = 0
;#enum EncErr_		// 
#enum EncErr_Max

//------------------------------------------------
// 字句タイプ (lex)
//------------------------------------------------
#enum LxTkType_None = 0
#enum LxTkType_Int			// 整数
#enum LxTkType_Operator		// 二項演算子
#enum LxTkType_Comma		// カンマ
#enum LxTkType_Splitter		// 文区切り
#enum LxTkType_Term			// 終端
#enum LxTkType_Max
#enum LxTkType_Error = (-1)	// 負数は全部エラー扱い

//------------------------------------------------
// 演算子タイプ (lex)
//------------------------------------------------
#enum LxOpType_None = 0
#enum LxOpType_Add			// +
#enum LxOpType_Sub			// -
#enum LxOpType_Mul			// *
#enum LxOpType_Div			// /
#enum LxOpType_Mod			// %
#enum LxOpType_Max

#endif
