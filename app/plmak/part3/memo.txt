
	Virtual Machine
	
今回は作業の順番をすっ飛ばして、最後の機能 VM (Virtual Machine) を作ろうと思います。

VMというのは、「コードを実際に処理するプログラム」です。インタプリタともいいます。
さて、VMを作る前に、VMに渡す「コード」の形式を決めましょう。このコードのことを plmac (plmak code) と呼ぶことにします。

※これを決めておかないと、字句解析の次の処理がやりにくいので、VM 作りを先にしました。また、このような簡単な言語の場合、VM が一番作りやすかったりします。

実行速度はあまり考える必要もなさそうなので (そもそもHSP上で動かすという時点で遅いため)、コードの受け渡しは、やりやすい方法にします。

コードは、abdata_list 1つに格納します。

(0を含む)偶数番目の要素 ([2n]) に処理の種類を、奇数番目の要素 ([2n + 1]) に、その処理のパラメータを、それぞれ格納します。処理の種類は int 、パラメータは任意の型(現在は int のみ)です。

処理一覧
	push (値)
		指定の値をスタックに push します。
	pop
		スタック上の値を除去します。
	add, sub, mul, div, mod
		スタック上から2つの値を取り出して、(処理ごとの)演算をし、
		その結果をスタックに戻します。
	
実装は、ひたすらコードの指示に従い、スタックを操作するだけの簡単なお仕事です。

