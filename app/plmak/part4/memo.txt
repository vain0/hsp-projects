
	構文解析

構文解析 (parse) と呼ばれる処理をします。
ここでは、今までで作った字句列を、文法的に解釈して、再構成します。異常であれば、文法的エラーも起こします。

今回は構文木を使ってみようと思います。拡張性がありそうな気がするので (……するだけだ！)。
構文木とは、文章(ここではスクリプト)を木構造で表したものです。例えば、次の文(式文)：
	1 + 2 * 3
—からは、次のような構文木が作れます：
	<img src="">
※超手抜き乙。

因みに、1, 2, 3 の整数は、図ではリーフノード(子ノードを持たないノード)のように描きましたが、実装では子ノードを1つ持ち、実際の整数値はその子が持ちます。



-----
後、plmak_prs.as は必要だったのか？　と言われそうですが、MCParser の存在は外部から隠蔽しておきたいのと、デバッグ出力をかませたいのと、lex や enc と似た形式で呼び出せるようにしておきたいのとで、一応作りました。

