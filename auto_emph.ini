; auto_emph config

[Option]
; #uselib をコメントに明示する
bExplicitUselib=1

[Color]
; 識別子の色分け設定
; @ Type : 独立性の指定
; @ Text : 文字色
; @ Back : 背景色 (無効)

; @ 出力 : "(識別子) (Type) (Text)"

Id.$keylist="Label,Sttm<static>,Sttm<member>,Func<static>,Func<member>,Sttm<dll>,Func<dll>,Module,Class,IFace,ComFunc,Macro,Macro<ctype>,Const,Cmd"
Id.$idtypelist="ラベル,命令,命令 Ｍ,関数,関数 Ｍ,命令(Dll),関数(Dll),モジュール,クラス,interface,命令(COM),マクロ,マクロ Ｃ,定数,コマンド"

; ラベル (*・) : 無効
;Type.Id.Label="0x000000D0"
;Text.Id.Label="#A4A400"
;Back.Id.Label=

; 静的命令 (#deffunc)
Type.Id.Sttm<static>="OWNFUNC"
Text.Id.Sttm<static>="OWNFUNC"
;Back.Id.Sttm<static>=

; メンバ命令 (#modfunc)
Type.Id.Sttm<member>="OWNFUNC"
Text.Id.Sttm<member>="OWNFUNC"
;Back.Id.Sttm<member>=

; 静的関数 (#defcfunc)
Type.Id.Func<static>="OWNCFUNC"
Text.Id.Func<static>="OWNCFUNC"
;Back.Id.Func<static>=

; メンバ関数 (#modcfunc)
Type.Id.Func<member>="OWNCFUNC"
Text.Id.Func<member>="OWNCFUNC"
;Back.Id.Func<member>=

; Dll命令 (#func)
Type.Id.Sttm<dll>="WIN32APIFUNC"
Text.Id.Sttm<dll>="WIN32APIFUNC"
;Back.Id.Sttm<dll>=

; Dll関数 (#cfunc)
Type.Id.Func<dll>="WIN32APICFUNC"
Text.Id.Func<dll>="WIN32APICFUNC"
;Back.Id.Func<dll>=

; モジュール (#module)
;Type.Id.Module=""
;Text.Id.Module=""
;Back.Id.DllFunc=

; クラス (#module x, y, ...)
;Type.Id.Class=""
;Text.Id.Class=""
;Back.Id.Class

; インターフェース (#usecom)
Type.Id.IFace="0x000000D0"
;Text.Id.IFace=""
;Back.Id.IFace=

; COM 命令・関数 (#comfunc)
Type.Id.ComFunc="0x000000D0"
;Text.Id.ComFunc=
;Back.Id.ComFunc=

; マクロ (#define)
Type.Id.Macro="MACRO"
Text.Id.Macro="MACRO"
;Back.Id.Macro=

; 関数形式マクロ (#define ctype)
Type.Id.Macro<ctype>="MACRO"
Text.Id.Macro<ctype>="MACRO"
;Back.Id.Macro(ctype)=

; 定数 (#const, #enum)
Type.Id.Const="MACRO"
Text.Id.Const="MACRO"
;Back.Id.Const=

; プラグインコマンド (#cmd)
Type.Id.Cmd="FUNC"
Text.Id.Cmd="FUNC"
;Back.Id.Cmd=

;-----------
; その他
; @ macro の (local | global) での色分けの需要が不明。

; @ 略語
; @	sttm  = statement (命令; #deffunc, #modfunc)
; @	func  = function  (関数; #defcfunc, #modcfunc)
; @	const = constant value (定数; #const, #enum)
; @	IFace = interface (インターフェース; #usecom)
; @ タグ
; @ <static> 静的関数   (#def[c]func)
; @ <member> メンバ関数 (#mod[c]func)
; @ <ctype>  関数形式   (#defcfunc, #modcfunc, #cfunc, #define ctype)
