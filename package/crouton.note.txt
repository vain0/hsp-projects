crouton - hsp3 integral hpi

＠メンバー

call, opex, var_assoc, var_vector

＠履歴
－2014.09.26 (Fri)
・call: コマンド lambda を追加したが、キャプチャされた local が正しく振る舞わない。

－2014.09.25 (Thu)
・call: 束縛関数を生成する関数コマンド、argbind を追加した。

－2014.09.23 (Tue)

・vector: var 参照を持つ要素に内部変数の添字を与えたら、「配列・関数として使用できない型です」(HSPERR_INVALID_ARRAY)エラーを出すようにした。
・label に比較演算を定義するようにした。
	call_defineLabelComparison
・opex: 変数型の名前を取得する関数コマンド、vtname() を追加した。

－2014.09.21 (Sun)

・obsidian → crouton に改名した。
・git/github でバージョン管理するようにした。

－2012.09.23 (Sun)

・作成。
・apply, arguments
・Vector: map, fold(L/R), unfold(L/R), filter

＠memo


＠wish

PrmStk を操作するインターフェースクラスの再考
vector_t の中身の extern template 宣言
lambda のデバッグ
	(arr(n) -> 配列の要素が無効です、のエラー、length() で十分な要素数を持つことは確認している)

・call の拡張的関数子の実装
	knowbug 文字列化の実装
・call/structWrap, methodWrap の実装
・vector のコンテナ移動機能の再実装
	sort
・assoc の Managed<> を使った実装
	PVal::offset だけで添字結果を判断するように
	prototype 的仕様の追加
・obsjson の修整
・knowbug との連携――call 時に呼び出しノードを push/pop

・スクリプト側で、今実行されているのが call による呼び出しかどうかを確認する方法。

issues
・argbind: flex 引数に nobind を与えることができない。
・unbind などの一時オブジェクトでないオブジェクトを返す関数を何らかの方法で再実装

その他
opex: labelname (for debug; CAxを使う or めんどくさい)
call:
可変長引数にvectorを直接渡す、
f(bycomposite g) = f○g
既定引数
束縛を再帰的に解除する仕様？

lambda の命令版
debug 実行ならlambda ラベルの位置情報を dinfo に書き込む
内部から lambda を生成する
