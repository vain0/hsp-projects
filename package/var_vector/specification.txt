
	vector型 仕様書

＠概要
	一次元可変型配列コンテナ。
	
	直線状に n 個の内部変数を所有する。
	「変数(n)」として添字を付けることで、内部変数に参照する。2つ目以降には vector 内部変数の添字が指定できる。
	なお、null 値でも、この形式で参照すると自動的に実体化する。
	
	紛らわしいが、参照型ではない。内部変数が参照型のような振る舞いをするだけである。
	
＠データ管理
	＊PVal構造体
		・PVal::pt
			CVector へのポインタへのポインタ。( = &PVal::master )
			
			Alloc() では新しい要素は NULL で初期化されるが、vector 命令ではそれを実体化する
			(⇔ new CVector を代入する)。
			@ 例えば、「x = (vector値)」として共有参照を作るとき、HSPの仕様として左辺が vector 型に初期化されるが、
			@	この初期値は直後の代入操作によって消去されるため、Alloc() で毎回実体を確保するのは無駄が多い。
			
			@ テンポラリ変数の場合、比較演算の結果により、マジックコード (NULL でないが有効でない特定の値)、
			@	CMulti::MagicNull を取ることがある。
			@	解放時にのみ気をつければ問題ない。
			
		・PVal::master
			CVector へのポインタ (= 実体)。
			これが指し示すバッファの上に、この変数が持つ CVector の実体がある。
			
		・PVal::offset
			CVector の添字。
			
	＊CVector クラス
		内部変数参照(PValRef*)の配列を持つ。
		参照カウンタで管理される。
	
＠代入
	ObjectWrite() 関数を用いる。
	
	＊内部変数参照がある場合
		・内部変数に対して代入処理をする。
		・連続代入は vector 自身に対して行われる。
			@ex: v(n) = a, b ⇔ v(n) = a, v(n + 1) = b
		
	＊内部変数参照がない場合
		・左辺のデータを破棄する。
		・左辺が新しい CVector を生成する。
		・それに、右辺が持つ各内部変数の参照を追加する。
	
＠メソッド呼び出し
	内部変数への参照を必須とする。
	内部変数の型に合わせて、その型の持つ ObjectMethod 関数を呼び出す。
	
	
