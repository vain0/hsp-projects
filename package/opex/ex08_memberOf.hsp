// ex08

#include "opex.as"
;#include "obsidian.as"

// memberOf(インスタンス src, メンバ member)
// @ インスタンス src が持つメンバ変数 member の値を取得する。
// @ member には添字を付けてもよい。

// memberClone 変数 dst, インスタンス src, メンバ member
// @ 変数 dst を、インスタンス src が持つメンバ変数 member の弱参照(clone)にする。
// @ 弱参照(clone)については、命令 clone を参照のこと。

// これらを使用して、モジュールの中で、そのクラスの thismod 以外が持つメンバを使用できる。

// 3次元の点
#module MCPoint pt_

#modinit int x, int y, int z
	pt_ = x, y, z
	return
	
#modcfunc point_toString
	return strf("(%d, %d, %d)", pt_(0), pt_(1), pt_(2))
	
#modfunc point_test var rhs
	// rhs は MCPoint のインスタンスとする。
	// rhs が持つメンバ pt_ には、他の #modfunc を通じてしか参照できない。
	mes "rhs = " + point_toString(rhs)
	
	// memberOf で直接参照できる
	mes "rhs.pt_(1) = " = memberOf(rhs, pt_(1))
	
	// memberClone でいじくり回せる
	// rhs_pt を「rhs が持つ pt_」の弱参照にする。
	memberClone  rhs_pt,  rhs, pt_
	mes "rhs.pt_ : address = " + varptr(rhs_pt)
	
	return
	
#global

	newmod pt1, MCPoint@, 1, 2, 3
	newmod pt2, MCPoint@, 4, 5, 6
	mes "pt1 = " + point_toString(pt1)
	mes "pt2 = " + point_toString(pt2)
	point_test pt1, pt2
	
	stop
