// call.hpi - sample 22

#include "call.as"			// (省略可)
#include "call_modcls.as"	// 拡張ヘッダの include が必要

// モジュールクラスの識別
// @ ex16, ex21 も参照

// modcls_identity( modcls )
// modinst_cls( modinst )
// @ モジュールクラスや、インスタンスのクラスに対応する一意な値が得られる。
// @ nullmod の場合も、nullmod に固有の値 (modcls_bottom) が得られる。

// modcls_bottom
// @ nullmod のクラスを示す値。

// 識別オブジェクト
// @ 各モジュールクラスに対してユニーク(唯一)に存在する。
// @ 同値比較 ==, != を行うことができる。
// @ 順序比較 <, > も定義されているが意味はない。
// @ 二項演算 ( + や * など ) は定義されていない。
// @ 他の型に変換することはできない。

#include "call_for_sample.as"		// サンプル用ヘッダ

	newmod inst, Test, 1
	
	id_inst = modinst_cls( inst )		// 変数から識別オブジェクトを得る
	id_null = modinst_cls( nullmod )	// 　値から〃
	id_test = modcls_identity( Test )	// クラスから〃
	
	mes "inst is-a null? " + ( id_inst == modcls_bottom )
	mes "null is-a null? " + ( id_null == modcls_bottom )
	
	mes "inst is-a Test? " + ( id_inst == id_test )
	mes "null is-a Test? " + ( id_null == id_test )	// 異なる
	
	x = id_test( 2 )
	
	// テスト
	assert( (id_inst == modcls_bottom) == false )
	assert( (id_null == modcls_bottom) == true )
	
	assert( (id_inst == id_test) == true )
	assert( (id_null == id_test) == false )
	
	mes "ok"
	stop

