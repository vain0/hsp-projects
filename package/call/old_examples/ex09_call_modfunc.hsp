// call.hpi - sample 9

#include "call.as"

// メンバ命令・関数 を call する

// @ defidOf は省略できない。

*main
	randomize
	
	point_new  pt
	point_setX pt, rnd(100)
	point_setY pt, rnd(100)
	
	mes "(x, y) = " + point_toString( pt )
	mes "(x   ) = " + call( defidOf( point_getX ), pt )
	mes "(   y) = " + call( defidOf( point_getY ), pt )
	
	stop
	
//##############################################################################
//                Point クラス
//##############################################################################
#module MCPoint mx, my

// 構築者
#deffunc point_new array v
	newmod v, MCPoint
	return
	
// コンストラクタ
#modinit
	mx = 0
	my = 0
	return
	
// メンバ設定
#modfunc point_setX int x
	mx = x
	return
	
#modfunc point_setY int y
	my = y
	return
	
// メンバ取得
#modcfunc point_getX
	return mx
	
#modcfunc point_getY
	return my
	
// 文字列化関数
#modcfunc point_toString
	return strf("(%d, %d)", mx, my)
	
#global
