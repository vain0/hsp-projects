// call.hpi - method sample 1

#include "call.as"

// メソッド呼び出し機能の掠奪

// @ メソッド呼び出しを勝手に処理する機能。実用性はない。
// @ これにより、comobj 以外の型でもメソッドが呼べるようにできる。

// @ method_replace (型)
// @	指定した型のメソッド呼び出し機能を call に任せる。
// @ method_add (型), "(メソッド名)", (メソッドの実装場所), 仮引数リスト...
// @	指定した型にメソッドを登録する。

// @ (型) には str, double, int か、あるいは型名を書く。
	
	method_replace "int"
	method_add     "int", "add",   labelOf(method_int_add),  "..."		// 可変長引数
	method_add     "int", "print", *LMethodInt_Print
	
	n = 0
	n->"add" 100
	n->"add" 1, 2, 3, 4, 5, 6, 7, 8, 9
	n->"print"
	
	method_name = "add", "print"
	n->method_name(1)
	
;	n->"--"		// 存在しないメソッドの呼び出し => 「サポートされない機能を選択しました」
	
	stop
	
//------------------------------------------------
// メソッドの処理を定義
// 
// @ this を参照するには #deffunc が必須。
// @ #deffunc の仮引数はテキトーでよい。
// 		this 以外は無くても問題なし。
// @ argv は this を引数として認識しないので注意。
//------------------------------------------------
#deffunc method_int_add var this
	repeat argc - 1, 1
		this += argv(cnt)
	loop
	return
	
#deffunc method_int_print var this
*LMethodInt_Print
	print this
	return
	